apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: git2grid
  namespace: git2grid
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: git2grid
        role: git2grid
    spec:
      containers:
        - name: git2grid
          image: billytrend/git2grid:2
          ports:
            - containerPort: 3000
          env:
            - name: GO_ENV
              value: "production"
            - name: eventgridEndpoint
              valueFrom:
                secretKeyRef:
                  name: git2grid-secrets
                  key: eventgrid-endpoint
            - name: webhookSecret
              valueFrom:
                secretKeyRef:
                  name: git2grid-secrets
                  key: webhook-secret
            - name: eventgridSecret
              valueFrom:
                secretKeyRef:
                  name: git2grid-secrets
                  key: eventgrid-secret
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: default-http-backend
  namespace: git2grid
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: default-http-backend
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: default-http-backend
        # Any image is permissable as long as:
        # 1. It serves a 404 page at /
        # 2. It serves 200 on a /healthz endpoint
        image: gcr.io/google_containers/defaultbackend:1.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
---
kind: Service
apiVersion: v1
metadata:
  name: default-http-backend
  namespace: git2grid
spec:
  selector:
    app: default-http-backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata: 
  name: nginx-ingress-controller
  namespace: git2grid
spec: 
  replicas: 1
  revisionHistoryLimit: 3
  template: 
    metadata: 
      labels: 
        k8s-app: nginx-ingress-lb
    spec: 
      containers: 
        - args: 
            - /nginx-ingress-controller
            - "--default-backend-service=git2grid/default-http-backend"
            - "--default-ssl-certificate=git2grid/tls-certificate"
            - "--force-namespace-isolation=true"
          env: 
            - name: POD_NAME
              valueFrom: 
                fieldRef: 
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom: 
                fieldRef: 
                  fieldPath: metadata.namespace
          image: "quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.20.0"
          imagePullPolicy: Always
          livenessProbe: 
            httpGet: 
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 5
          name: nginx-ingress-controller
          ports: 
            - containerPort: 80
              name: http
              protocol: TCP
            - containerPort: 443
              name: https
              protocol: TCP
          volumeMounts: 
            - mountPath: /etc/nginx-ssl/dhparam
              name: tls-dhparam-vol
      terminationGracePeriodSeconds: 60
      volumes: 
        - name: tls-dhparam-vol
          secret: 
            secretName: tls-dhparam

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress
  namespace: git2grid
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https
  selector:
    k8s-app: nginx-ingress-lb
---
apiVersion: v1
kind: Service
metadata:
  name: git2grid-svc
  namespace: git2grid
spec: 
  ports: 
     -  port: 3000
        protocol: TCP
        targetPort: 3000
  selector: 
    app: git2grid
    role: git2grid
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: git2grid-ingress
  namespace: git2grid
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.org/ssl-services: "git2grid-svc"
spec:
  tls:
    - hosts:
      - git2grid-test.azure-devex-tools.com
      secretName: tls-certificate
  rules:
  - host: git2grid-test.azure-devex-tools.com
    http:
      paths:
      - path: /
        backend:
          serviceName: git2grid-svc
          servicePort: 3000